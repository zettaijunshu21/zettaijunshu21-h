{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Unsplash? This module is made to provide a client access to all Unsplash features, making it possible to download user photos, collections or even a search. If you don't know what Unsplash is, you should visit it to get a better idea of what it is: https://unsplash.com/ Basically, it's a site where all photos published by people can be used for free. You can use them for commercial and noncommercial purposes. You do not need to ask permission from or provide credit to the photographer or Unsplash, although it is appreciated when possible. If you want to know more about its license, visit https://unsplash.com/license","title":"Welcome to unsplashpy"},{"location":"#what-is-unsplash","text":"This module is made to provide a client access to all Unsplash features, making it possible to download user photos, collections or even a search. If you don't know what Unsplash is, you should visit it to get a better idea of what it is: https://unsplash.com/ Basically, it's a site where all photos published by people can be used for free. You can use them for commercial and noncommercial purposes. You do not need to ask permission from or provide credit to the photographer or Unsplash, although it is appreciated when possible. If you want to know more about its license, visit https://unsplash.com/license","title":"What is Unsplash?"},{"location":"api/","text":"API Reference Available types class unsplashpy. Unsplash This is the main class of the unsplashpy module. This will allow you to perform some common actions like searching for photos, users or collections. class unsplashpy. User Unsplash user, referenced by the username attribute. class unsplashpy. Photo Unsplash photo, referenced by its id attribute. Objects Unsplash Objects class unsplashpy. Unsplash ([size_to_download: Union['thumb', 'small', 'regular', 'full'] ='regular']) User Objects class unsplashpy. User (username: str , [get_total_info: bool =True]) Photo Objects class unsplashpy. Photo (id: str , [_json: dict =None])","title":"API"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"api/#available-types","text":"class unsplashpy. Unsplash This is the main class of the unsplashpy module. This will allow you to perform some common actions like searching for photos, users or collections. class unsplashpy. User Unsplash user, referenced by the username attribute. class unsplashpy. Photo Unsplash photo, referenced by its id attribute.","title":"Available types"},{"location":"api/#objects","text":"","title":"Objects"},{"location":"api/#unsplash-objects","text":"class unsplashpy. Unsplash ([size_to_download: Union['thumb', 'small', 'regular', 'full'] ='regular'])","title":"Unsplash Objects"},{"location":"api/#user-objects","text":"class unsplashpy. User (username: str , [get_total_info: bool =True])","title":"User Objects"},{"location":"api/#photo-objects","text":"class unsplashpy. Photo (id: str , [_json: dict =None])","title":"Photo Objects"},{"location":"examples/","text":"Download user's photos The bellow code will allow you to download all the user's published photos. One difference from the \"Quick start\" example is that this will take much more time downloading all pictures because this part doesn't make use of multithreading. We'll see another example on how to make this in a much more efficient way. Another thing to know is that, by default, all the images downloaded will have a regular resolution. from unsplashpy import User username = input ( 'Tell me a username: ' ) u = User ( username ) for p in u . photos : p . download ( download_location = username ) Download user's photos (multithreading way) As said before, this is a more efficient way to download photos. It takes much less time than the above example. from unsplashpy import User username = input ( 'Tell me a username: ' ) u = User ( username ) u . download_all_photos () Download random photo from unsplashpy import Photo p = Photo . random () p . download () To get a more detailed description about classes and methods included in this module, check out the API section .","title":"Some examples"},{"location":"examples/#download-users-photos","text":"The bellow code will allow you to download all the user's published photos. One difference from the \"Quick start\" example is that this will take much more time downloading all pictures because this part doesn't make use of multithreading. We'll see another example on how to make this in a much more efficient way. Another thing to know is that, by default, all the images downloaded will have a regular resolution. from unsplashpy import User username = input ( 'Tell me a username: ' ) u = User ( username ) for p in u . photos : p . download ( download_location = username )","title":"Download user's photos"},{"location":"examples/#download-users-photos-multithreading-way","text":"As said before, this is a more efficient way to download photos. It takes much less time than the above example. from unsplashpy import User username = input ( 'Tell me a username: ' ) u = User ( username ) u . download_all_photos ()","title":"Download user's photos (multithreading way)"},{"location":"examples/#download-random-photo","text":"from unsplashpy import Photo p = Photo . random () p . download () To get a more detailed description about classes and methods included in this module, check out the API section .","title":"Download random photo"},{"location":"installation/","text":"Installation First, make sure you have installed Python 3 pip install unsplashpy","title":"Installation"},{"location":"installation/#installation","text":"First, make sure you have installed Python 3 pip install unsplashpy","title":"Installation"},{"location":"quick_start/","text":"You can start trying out how this module works by importing the Unsplash class, which will help you with some regular user actions. In this case, you are goind to search for a keyword and then download a certain number of image pages of that results. By default, there are 30 images per page. from unsplashpy import Unsplash # Instantiate the Unsplash class u = Unsplash () search_text = input ( 'Tell me what are you searching for: ' ) # Search something u . search ( search_text ) num_pages = input ( 'Pages to download [10]: ' ) num_pages = 5 if num_pages == '' else int ( num_pages ) image_size = input ( 'Image size to download [regular]: ' ) image_size = 'regular' if image_size == '' else image_size u . download_last_search ( num_pages = num_pages , image_size = image_size ) Let's see how this works: Tell me what are you searching for: smile There are 4931 photos and 165 pages for searching text \"smile\" Pages to download [10]: 5 Image size to download [regular]: Got 150 images in 9.243408918380737 seconds (16.227779310046692 images per second) As you can see above, it downloaded 150 images in 9.2 seconds, that's thanks to threading features included in the module. A total of 16.2 images per second. And here's the output:","title":"Quick start"}]}